
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADD_NODE ADD_TRANS AND ARRAY ASIGNACION BEGIN BOOLEAN CALL CEIL COMA COMENTARIO DEEP DEQUEUE DIFERENTE DIV DIVIDIR DO DOSPUNTOS DOUBLE DOUBLEVAL ELSE END ENQUEUE FALSE FLOOR FOR FUNCTION GET GET_P GET_Q GRAPH ID IF IGUAL INTEGER INTEGERVAL LENGTH LIST MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD MODOREFERENCIA MODOVALOR NOT NULL OR PA PC POP POR PROCEDURE PUNTO PUNTOCOMA PUSH QUEUE RECORD REMOVE REMOVE_NODE REMOVE_TRANS REPEAT SIZE SIZE_QUEUE SIZE_STACK STACK STRING STRINGVAL SUBARRAY THEN TO TRUE UNTIL VAR WHILE WIDTH WRITELNoperacion : paroperacion : SUBARRAYpar : opmathpar : PA par PC parAuxparAux : mathsymbol parparAux : emptyopmath : valoropmath : valor mathsymbol parmathsymbol : MASmathsymbol : MENOSmathsymbol : PORmathsymbol : DIVIDIRmathsymbol : DIVmathsymbol : MODtecho : CEIL PA opmath PCpiso : FLOOR PA opmath PCvalor : IDvalor : INTEGERVALvalor : DOUBLEVALvalor : STRINGVALvalor : TRUEvalor : FALSEvalor : techovalor : pisovalor : longitudvalor : dequeuevalor : popvalor : getvalor : getqvalor : getpvalor : sizevalor : sizequeuevalor : sizestackvalor : deepvalor : widthvalor : llamarlongitud : LENGTH PA STRINGVAL PCdequeue : DEQUEUE PA ID PCpop : POP PA ID PCget : GET PA ID COMA INTEGERVAL PCgetq : GET_P PA ID PCgetp : GET_Q PA ID PCsize : SIZE PA ID PCsizequeue : SIZE_QUEUE PA ID PCsizestack : SIZE_STACK PA ID PCdeep : DEEP PA ID PCwidth : WIDTH PA ID PCllamar : CALL ID PA valoresCall PCllamar : CALL ID PA PCvaloresCall : valorvaloresCall : valor COMA valoresCallempty : longitud : LENGTH PA error PCdequeue : DEQUEUE PA error PCpop : POP PA error PCget : GET PA ID COMA error PCgetq : GET_P PA error PCgetp : GET_Q PA error PCsize : SIZE PA error PCsizequeue : SIZE_QUEUE PA error PCsizestack : SIZE_STACK PA error PCdeep : DEEP PA error PCwidth : WIDTH PA error PC'
    
_lr_action_items = {'SUBARRAY':([0,],[3,]),'PA':([0,5,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,62,90,],[5,5,49,50,51,52,53,54,55,56,57,58,59,60,61,5,-9,-10,-11,-12,-13,-14,88,5,]),'ID':([0,5,40,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,88,90,122,],[7,7,62,7,-9,-10,-11,-12,-13,-14,7,7,69,71,73,74,76,78,80,82,84,86,7,7,7,]),'INTEGERVAL':([0,5,42,43,44,45,46,47,48,49,50,88,90,100,122,],[8,8,8,-9,-10,-11,-12,-13,-14,8,8,8,8,119,8,]),'DOUBLEVAL':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[9,9,9,-9,-10,-11,-12,-13,-14,9,9,9,9,9,]),'STRINGVAL':([0,5,42,43,44,45,46,47,48,49,50,51,88,90,122,],[10,10,10,-9,-10,-11,-12,-13,-14,10,10,67,10,10,10,]),'TRUE':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[11,11,11,-9,-10,-11,-12,-13,-14,11,11,11,11,11,]),'FALSE':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[12,12,12,-9,-10,-11,-12,-13,-14,12,12,12,12,12,]),'CEIL':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[27,27,27,-9,-10,-11,-12,-13,-14,27,27,27,27,27,]),'FLOOR':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[28,28,28,-9,-10,-11,-12,-13,-14,28,28,28,28,28,]),'LENGTH':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[29,29,29,-9,-10,-11,-12,-13,-14,29,29,29,29,29,]),'DEQUEUE':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[30,30,30,-9,-10,-11,-12,-13,-14,30,30,30,30,30,]),'POP':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[31,31,31,-9,-10,-11,-12,-13,-14,31,31,31,31,31,]),'GET':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[32,32,32,-9,-10,-11,-12,-13,-14,32,32,32,32,32,]),'GET_P':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[33,33,33,-9,-10,-11,-12,-13,-14,33,33,33,33,33,]),'GET_Q':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[34,34,34,-9,-10,-11,-12,-13,-14,34,34,34,34,34,]),'SIZE':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[35,35,35,-9,-10,-11,-12,-13,-14,35,35,35,35,35,]),'SIZE_QUEUE':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[36,36,36,-9,-10,-11,-12,-13,-14,36,36,36,36,36,]),'SIZE_STACK':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[37,37,37,-9,-10,-11,-12,-13,-14,37,37,37,37,37,]),'DEEP':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[38,38,38,-9,-10,-11,-12,-13,-14,38,38,38,38,38,]),'WIDTH':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[39,39,39,-9,-10,-11,-12,-13,-14,39,39,39,39,39,]),'CALL':([0,5,42,43,44,45,46,47,48,49,50,88,90,122,],[40,40,40,-9,-10,-11,-12,-13,-14,40,40,40,40,40,]),'$end':([1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,64,89,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,121,123,124,],[0,-1,-2,-3,-7,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-52,-8,-4,-6,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-5,-48,-40,-56,]),'PC':([4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,41,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,],[-3,-7,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,63,-52,-8,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,-4,-6,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,121,-49,-50,-5,123,124,-48,-40,-56,-51,]),'MAS':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[43,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,43,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'MENOS':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[44,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,44,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'POR':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[45,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,45,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'DIVIDIR':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,46,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'DIV':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[47,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,47,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'MOD':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,121,123,124,],[48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,48,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,-48,-40,-56,]),'COMA':([7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,73,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,121,123,124,],[-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,100,-15,-16,-37,-53,-38,-54,-39,-55,-41,-57,-42,-58,-43,-59,-44,-60,-45,-61,-46,-62,-47,-63,-49,122,-48,-40,-56,]),'error':([51,52,53,55,56,57,58,59,60,61,100,],[68,70,72,75,77,79,81,83,85,87,120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'operacion':([0,],[1,]),'par':([0,5,42,90,],[2,41,64,118,]),'opmath':([0,5,42,49,50,90,],[4,4,4,65,66,4,]),'valor':([0,5,42,49,50,88,90,122,],[6,6,6,6,6,117,6,117,]),'techo':([0,5,42,49,50,88,90,122,],[13,13,13,13,13,13,13,13,]),'piso':([0,5,42,49,50,88,90,122,],[14,14,14,14,14,14,14,14,]),'longitud':([0,5,42,49,50,88,90,122,],[15,15,15,15,15,15,15,15,]),'dequeue':([0,5,42,49,50,88,90,122,],[16,16,16,16,16,16,16,16,]),'pop':([0,5,42,49,50,88,90,122,],[17,17,17,17,17,17,17,17,]),'get':([0,5,42,49,50,88,90,122,],[18,18,18,18,18,18,18,18,]),'getq':([0,5,42,49,50,88,90,122,],[19,19,19,19,19,19,19,19,]),'getp':([0,5,42,49,50,88,90,122,],[20,20,20,20,20,20,20,20,]),'size':([0,5,42,49,50,88,90,122,],[21,21,21,21,21,21,21,21,]),'sizequeue':([0,5,42,49,50,88,90,122,],[22,22,22,22,22,22,22,22,]),'sizestack':([0,5,42,49,50,88,90,122,],[23,23,23,23,23,23,23,23,]),'deep':([0,5,42,49,50,88,90,122,],[24,24,24,24,24,24,24,24,]),'width':([0,5,42,49,50,88,90,122,],[25,25,25,25,25,25,25,25,]),'llamar':([0,5,42,49,50,88,90,122,],[26,26,26,26,26,26,26,26,]),'mathsymbol':([6,63,],[42,90,]),'parAux':([63,],[89,]),'empty':([63,],[91,]),'valoresCall':([88,122,],[115,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> operacion","S'",1,None,None,None),
  ('operacion -> par','operacion',1,'p_operacion_par','sintactico.py',8),
  ('operacion -> SUBARRAY','operacion',1,'p_operacion_subarray','sintactico.py',11),
  ('par -> opmath','par',1,'p_par_opmath','sintactico.py',14),
  ('par -> PA par PC parAux','par',4,'p_par_parAux','sintactico.py',17),
  ('parAux -> mathsymbol par','parAux',2,'p_parAux_mathsymbol','sintactico.py',24),
  ('parAux -> empty','parAux',1,'p_parAux_empty','sintactico.py',27),
  ('opmath -> valor','opmath',1,'p_opmath_valor','sintactico.py',34),
  ('opmath -> valor mathsymbol par','opmath',3,'p_opmath_mathsymbol','sintactico.py',37),
  ('mathsymbol -> MAS','mathsymbol',1,'p_mathsymbol_mas','sintactico.py',44),
  ('mathsymbol -> MENOS','mathsymbol',1,'p_mathsymbol_menos','sintactico.py',47),
  ('mathsymbol -> POR','mathsymbol',1,'p_mathsymbol_por','sintactico.py',50),
  ('mathsymbol -> DIVIDIR','mathsymbol',1,'p_mathsymbol_dividir','sintactico.py',53),
  ('mathsymbol -> DIV','mathsymbol',1,'p_mathsymbol_div','sintactico.py',56),
  ('mathsymbol -> MOD','mathsymbol',1,'p_mathsymbol_mod','sintactico.py',59),
  ('techo -> CEIL PA opmath PC','techo',4,'p_techo','sintactico.py',65),
  ('piso -> FLOOR PA opmath PC','piso',4,'p_piso','sintactico.py',68),
  ('valor -> ID','valor',1,'p_valor_id','sintactico.py',73),
  ('valor -> INTEGERVAL','valor',1,'p_valor_integerval','sintactico.py',76),
  ('valor -> DOUBLEVAL','valor',1,'p_valor_doubleval','sintactico.py',79),
  ('valor -> STRINGVAL','valor',1,'p_valor_stringval','sintactico.py',82),
  ('valor -> TRUE','valor',1,'p_valor_true','sintactico.py',85),
  ('valor -> FALSE','valor',1,'p_valor_false','sintactico.py',88),
  ('valor -> techo','valor',1,'p_valor_techo','sintactico.py',91),
  ('valor -> piso','valor',1,'p_valor_piso','sintactico.py',94),
  ('valor -> longitud','valor',1,'p_valor_longitud','sintactico.py',97),
  ('valor -> dequeue','valor',1,'p_valor_dequeue','sintactico.py',100),
  ('valor -> pop','valor',1,'p_valor_pop','sintactico.py',103),
  ('valor -> get','valor',1,'p_valor_get','sintactico.py',106),
  ('valor -> getq','valor',1,'p_valor_getq','sintactico.py',109),
  ('valor -> getp','valor',1,'p_valor_getp','sintactico.py',112),
  ('valor -> size','valor',1,'p_valor_size','sintactico.py',115),
  ('valor -> sizequeue','valor',1,'p_valor_sizequeue','sintactico.py',118),
  ('valor -> sizestack','valor',1,'p_valor_sizestack','sintactico.py',121),
  ('valor -> deep','valor',1,'p_valor_deep','sintactico.py',124),
  ('valor -> width','valor',1,'p_valor_width','sintactico.py',127),
  ('valor -> llamar','valor',1,'p_valor_llamar','sintactico.py',130),
  ('longitud -> LENGTH PA STRINGVAL PC','longitud',4,'p_longitud','sintactico.py',137),
  ('dequeue -> DEQUEUE PA ID PC','dequeue',4,'p_dequeue','sintactico.py',140),
  ('pop -> POP PA ID PC','pop',4,'p_pop','sintactico.py',143),
  ('get -> GET PA ID COMA INTEGERVAL PC','get',6,'p_get','sintactico.py',146),
  ('getq -> GET_P PA ID PC','getq',4,'p_getq','sintactico.py',149),
  ('getp -> GET_Q PA ID PC','getp',4,'p_getp','sintactico.py',152),
  ('size -> SIZE PA ID PC','size',4,'p_size','sintactico.py',155),
  ('sizequeue -> SIZE_QUEUE PA ID PC','sizequeue',4,'p_sizequeue','sintactico.py',158),
  ('sizestack -> SIZE_STACK PA ID PC','sizestack',4,'p_sizestack','sintactico.py',161),
  ('deep -> DEEP PA ID PC','deep',4,'p_deep','sintactico.py',164),
  ('width -> WIDTH PA ID PC','width',4,'p_width','sintactico.py',167),
  ('llamar -> CALL ID PA valoresCall PC','llamar',5,'p_llamar_valoresCall','sintactico.py',172),
  ('llamar -> CALL ID PA PC','llamar',4,'p_llamar_vacio','sintactico.py',175),
  ('valoresCall -> valor','valoresCall',1,'p_valoresCall_valor','sintactico.py',180),
  ('valoresCall -> valor COMA valoresCall','valoresCall',3,'p_valoresCall_varios','sintactico.py',183),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',189),
  ('longitud -> LENGTH PA error PC','longitud',4,'p_longitud_error','sintactico.py',194),
  ('dequeue -> DEQUEUE PA error PC','dequeue',4,'p_dequeue_error','sintactico.py',198),
  ('pop -> POP PA error PC','pop',4,'p_pop_error','sintactico.py',202),
  ('get -> GET PA ID COMA error PC','get',6,'p_get_error','sintactico.py',206),
  ('getq -> GET_P PA error PC','getq',4,'p_getq_error','sintactico.py',210),
  ('getp -> GET_Q PA error PC','getp',4,'p_getp_error','sintactico.py',214),
  ('size -> SIZE PA error PC','size',4,'p_size_error','sintactico.py',218),
  ('sizequeue -> SIZE_QUEUE PA error PC','sizequeue',4,'p_sizequeue_error','sintactico.py',222),
  ('sizestack -> SIZE_STACK PA error PC','sizestack',4,'p_sizestack_error','sintactico.py',226),
  ('deep -> DEEP PA error PC','deep',4,'p_deep_error','sintactico.py',230),
  ('width -> WIDTH PA error PC','width',4,'p_width_error','sintactico.py',234),
]
